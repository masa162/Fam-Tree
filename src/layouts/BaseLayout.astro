---
/* ---------- Imports ---------- */
import "../styles/global.css";
import Nav from "../components/Nav.astro";
import SideBar from "../components/SideBar.astro";
import type { ImageMetadata } from "astro";

/* ---------- Props 型 ---------- */
interface Props {
  title: string;
  description?: string;
  image?: string | ImageMetadata;   /* 文字列 or ImageMetadata */
  url?: string;
  sideBarActiveItemID?: string;
}

/* ---------- Props 受け取り＆デフォルト ---------- */
const {
  title,
  description = "家族の記録ブログ – うちのきろく",
  image,
  url = "https://fam-tree.netlify.app/",
  sideBarActiveItemID = "home",
} = Astro.props as Props;

/* ---------- og:image の絶対 URL 生成 ---------- */
const ogImage = (() => {
  if (typeof image === "string") {
    return new URL(image, Astro.site).href;
  }
  if (image) {
    return new URL(image.src, Astro.site).href;
  }
  return new URL("/ogp.png", Astro.site).href;   // フォールバック
})();
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>

    <!-- SEO / OGP -->
    <meta name="description" content={description} />
    <meta property="og:type"        content="website" />
    <meta property="og:title"       content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image"       content={ogImage} />
    <meta property="og:url"         content={url} />
    <meta name="twitter:card"        content="summary_large_image" />

    <!-- Favicon & RSS -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="alternate" type="application/rss+xml" title="うちのきろく RSS" href="/rss.xml" />
  </head>

  <body class="bg-base-100 text-neutral-700">
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };

      const setTheme = (theme) => {
        document.documentElement.setAttribute('data-theme', theme);
        document.documentElement.className = theme; // Tailwind CSS の dark クラス切り替え用
        if (typeof localStorage !== 'undefined') {
          localStorage.setItem('theme', theme);
        }
      };

      const toggleTheme = () => {
        const currentTheme = getThemePreference();
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        setTheme(newTheme);
      };

      // 初期テーマ設定
      setTheme(getThemePreference());

      // システム設定の変更を監視
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        setTheme(e.matches ? 'dark' : 'light');
      });

      // グローバルにテーマ切り替え関数を公開
      window.toggleTheme = toggleTheme;
    </script>

    <!-- モバイルナビ -->
    <Nav title="🌳" />

    <!-- サイドバー付きメイン -->
    <div class="drawer drawer-mobile lg:drawer-open">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content flex flex-col max-w-3xl mx-auto px-6 py-10">
        <slot />
      </div>
      <SideBar sideBarActiveItemID={sideBarActiveItemID} />
    </div>
  </body>
</html>
